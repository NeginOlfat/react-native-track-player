buildscript {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.0.21"
        classpath "com.facebook.react:react-native-gradle-plugin"
    }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

// Apply React plugin only for New Arch
if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

def getExtOrIntegerDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['RNTP_' + name]).toInteger()
}

// React Native Codegen configuration
if (isNewArchitectureEnabled()) {
  afterEvaluate {
        react {
            libraryName = "TrackPlayerSpec"
            codegenJavaPackageName = "com.doublesymmetry.trackplayer"
            root = rootProject.projectDir
            jsRootDir = file("./src")    // Explicit path to NativeTrackPlayer.ts
        }
 }
}

android {
    compileSdkVersion= getExtOrIntegerDefault('compileSdkVersion')
    namespace= 'com.doublesymmetry.trackplayer'

    defaultConfig {
        minSdkVersion= getExtOrIntegerDefault('minSdkVersion') // RN's minimum version
        targetSdkVersion= getExtOrIntegerDefault('targetSdkVersion')

        versionCode= 300
        versionName= '3.0'

        consumerProguardFiles("proguard-rules.txt")

        // Required for New Architecture
        buildConfigField("boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString())
    }

    buildFeatures {
        buildConfig= true
        prefab = isNewArchitectureEnabled() // Required for JSI modules
    }

    buildTypes {
        release {
        minifyEnabled false
        }
    }

    lintOptions {
        disable "GradleCompatible"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17 
        targetCompatibility JavaVersion.VERSION_17 
    }
    
}

// Workaround for New Arch builds
configurations.all {
    if (isNewArchitectureEnabled()) {
        resolutionStrategy {
            force "com.facebook.react:react-native:+"
        }
    }
}

repositories {
    mavenLocal()
    maven {
        // As RN is not updated in jcenter anymore, we'll have to grab it from npm
        // Make sure you have installed the react-native npm package before compiling
        url '../node_modules/react-native/android'
    }
    google()
    mavenCentral()
}

dependencies {
    // implementation 'com.github.doublesymmetry:kotlinaudio:v2.1.0'
    // used when building against local maven
    implementation "com.github.doublesymmetry:kotlin-audio:2.0.0"

    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "androidx.media:media:1.7.0"

    // Make sure we're using androidx
    implementation "androidx.core:core-ktx:1.15.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-process:2.6.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1"
    implementation "androidx.media3:media3-exoplayer:1.1.1"
    implementation "androidx.media3:media3-ui:1.1.1"
    implementation "androidx.media3:media3-common:1.1.1"
    implementation "androidx.media3:media3-extractor:1.1.1"
    implementation "androidx.media3:media3-session:1.1.1"
}

